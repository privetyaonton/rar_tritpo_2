Лабораторная работа №2

«Разработка и документирование требований к учебному проекту»

Цели: 

- изучить процесс выявления требований
- научиться документировать требования
- получить навыки совместной работы с требованиями

Рабочие языки: русский или английский

Инструментальные средства:

- для документирования требований: текстовый редактор / маркерная доска / Visual Paradigm (CRC, brainstorming и т.д.)
- для прототипирования GUI: графический редактор / Balsamiq Mockup / Fx Builder
- github

Порядок выполнения работы (работа в парах, задание индивидуальное!):

1. Изучить теоретический материал (прослушать лекцию, ознакомиться с литературой – К.Вигерс. Разработка Требований к программному обеспечению, просмотреть стандарты 
– IEEE, 
- ГОСТ 34.602 – https://protect.gost.ru/v.aspx?control=8&baseC=6&page=0&month=9&year=2022&search=%D0%B3%D0%BE%D1%81%D1%82%2034.602&RegNum=1&DocOnPageCount=15&id=231349
шаблоны документов прилагаются )
2. Внимательно прочитать задание.
3. Определить тип проекта (обсудить с напарником, а затем согласовать с преподавателем) – Web/ Desktop / Mobile-приложение, 
использование внешних сервисов, предпочтительные технологии, границы, язык описания и язык разработки; придумать название.
4. Изучить предметную область проекта, рассмотреть аналоги. 
5. Заполнить шаблон документа (на русском или английском языке – прилагается). 
6. Продумать интерфейс пользователя (нарисовать мокапы)
7. Создать репозиторий на Github, оформить README и выложить туда созданные документы (SRS и мокапы – продумать структуру
репозитория). !!! Документы выкладывать в форме, предоставляющей возможность комментирования и просмотра на сайте (docx к таким не относится) !!!
8. Ознакомиться с соответствующим заданием напарника, отписать комментарии по теме (замечания, предложения - конструктивные)
9. Прислать ссылку на свой репозиторий проекта на адрес pvm.bsuir@gmail.com (от реального имени и с номером группы)
10. Держать репозиторий up-to-date! (коммитить изменения, реагировать на замечания)

Плюс тем, кто поучаствует в обсуждении более чем одного (кроме своего) проекта (конструктивно)

Варианты заданий (приветствуются свои варианты):
1. Приложение для предоставления информации о курсе различных валют / ценных бумаг / золотовалютных резервов (использовать
актуальные данные с доступных сервисов в Интернет). В первую очередь, выявить бизнес-цели (кому и зачем такое приложение
может понадобиться). Продумать, какие валюты показывать (или предоставить пользователю право выбирать самому – исходя из
бизнес-целей), нужно ли показывать какую-либо дополнительную информацию – архивные данные, графики и т.д.Варианты
– архивные курсы для расчёта налогообложения индивидуального предпринимателя
- средство анализа финансовых данных (визуализация колебаний курсов, выявление корреляции между различными финансовыми данными)
- расчёт выгодности вкладов (с учётом исторических данных)
2. Приложение для предоставления информации, связанной с местоположением (можно использовать открытые API типа
forsquare, googlemaps, yahoo и т.п. – изучить возможности и обосновать выбор, или исходя из желания разработчика). В первую
очередь, выявить бизнес-цели (кому и зачем такое приложение может понадобиться).
Варианты:
- прокладка маршрута по интересным местам для проведения экскурсии (можно использовать дополнительную информацию со
справочных ресурсов)
- планирование дня, исходя из списка важных дел (поиск ближайшего магазина / аптеки / СТО и т.д.)
3. Приложение для предоставления информации о просмотренных фильмах, книгах, купленных товарах (можно использовать данные
сервисов imdb, amazon, goodreads)
Варианты:
- менеджер личной коллекции фильмов / книг
- сервис рекомендаций фильмов/книг
- планирование пополнения личной библиотеки
4. Список дел/ калькулятор/ список покупок / расписание / напоминалка (с «изюминкой», которая определяется бизнес-целями)
5. Многопользовательские игры (с бизнес-целями)